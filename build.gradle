buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
ext {
    assert macros ==~ /^.+_for_.*$/ : "Macros version specifier was invalid"
    modVersion = macros.split("_for_")[0]
    mcVersion = macros.split("_for_")[1]
}

apply plugin: 'net.minecraftforge.gradle.liteloader'

minecraft {
    version = project.mcVersion
    mappings = project.mappings
    runDir = "run"
}

repositories {
    maven {
        name = 'mumfrey'
        url = 'http://repo.mumfrey.com/content/repositories/macros'
    }
}

dependencies {
    compile 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    compile 'commons-net:commons-net:3.6'
    deobfCompile "net.eq2online:macrosdev:$modVersion"
    compile files ("C:\\bari\\api.jar")
    compile files ("C:\\bari\\APIHttpScriptExecution-0.1-mc1.12.1.jar")
}

afterEvaluate {
    makeEclipseCleanRunClient {
        arguments = ""
        jvmArguments = "-Dmacros.modules=" + modules.split(",").collect{mod -> "$basePackage.$mod"}.join(',')
    }

    def deobfResolved = configurations.deobfCompile.resolvedConfiguration.resolvedArtifacts
    def apiVersion = deobfResolved.findAll({it.name == "macrosapi"})[0].moduleVersion.id.version

    jar {
        baseName = "module_" + "AroundEnoughInformation"
        classifier = "$apiVersion-$modVersion-" + jar.classifier
        extension = "jar"
    }
    
    // Same for the source jar
    sourceJar {
        baseName = jar.baseName
        classifier = jar.classifier + "-sources"
    }
}
